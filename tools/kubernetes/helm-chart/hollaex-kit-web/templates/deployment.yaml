apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{.Release.Name}}
    role: {{.Release.Namespace}}
  name: {{.Release.Name}}
  namespace: {{.Release.Namespace}}
spec:
  revisionHistoryLimit: 3
  replicas: {{.Values.stable.replicaCount}}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  minReadySeconds: 5

  selector:
    matchLabels:
      app: {{.Release.Name}}
      role: {{.Release.Namespace}}
      tier: backend
  template:
    metadata:
      labels:
        app: {{.Release.Name}}
        role: {{.Release.Namespace}}
        tier: backend
    spec:

{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}

      containers:
      - name: {{.Release.Name}}
        image: {{.Values.imageRegistry}}:{{.Values.dockerTag}}
        imagePullPolicy: IfNotPresent

        ports:
        - name: port
          containerPort: 80
        
        resources:
          limits:
            memory: {{.Values.resources.limits.memory}}
          requests:
            memory: {{.Values.resources.requests.memory}}
            cpu: {{.Values.resources.requests.cpu}}
      
        
{{- if .Values.podRestart_webhook_url }}
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "export hostname=`hostname` && curl -X POST -H 'Content-type: application/json' --data '{\"attachments\": [ { \"color\": \"#A569BD\", \"title\": \"Pod has been terminated!\", \"text\": \"⚠️Pod '\"${hostname}\"' just has been terminated.⚠️\" } ] }' {{.Values.podRestart_webhook_url}}"]
{{- end }}

        readinessProbe:
          exec:
            command:
            - curl
            - http://localhost
          initialDelaySeconds: 15
          periodSeconds: 15

{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
{{- end }}